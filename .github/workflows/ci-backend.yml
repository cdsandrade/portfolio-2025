name: Backend CI

on:
  push:
    branches:
      - master
      - 'feature/*'
    paths:
      - '.github/workflows/ci-backend.yml'
      - 'backend/ecosystem.config.js'
      - 'backend/eslint.config.mjs'
      - 'backend/src/**.js'
      - 'backend/tests/**.js'
    # paths-ignore:
    #    - 'backend/scripts/**'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      NAMESPACE: dev

    defaults:
      run:
        shell: bash
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [ 18.x, 20.x, 22.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Set version
        id: version
        run: |
          COMMIT=$(git rev-parse --short HEAD)
          VERSION="0.0.0-${GITHUB_REF##*/}-$COMMIT"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build --if-present

      - name: Run unit tests
        run: npm run test:unit

      - name: Spin up service
        run: |
          docker compose up -d --build backend
          echo "Waiting for service to be ready..."
          for i in {1..10}; do
            if curl -s http://localhost:3000/api/health; then
              echo "Service is up!"
              exit 0
            fi
            echo "Service not ready yet, retrying in 2s..."
            sleep 2
          done
          echo "Service failed to start in time."
          exit 1
        working-directory: .

      - name: Run integration tests
        run: npm run test:integration

      - name: Teardown service
        run: docker compose down
        working-directory: .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push API Image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/portfolio-2025-api:$VERSION .
          docker push ${{ steps.login-ecr.outputs.registry }}/portfolio-2025-api:$VERSION
