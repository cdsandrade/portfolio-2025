name: Build and Deploy to EKS

on:
  push:
    branches:
      - main
      - 'feature/**'
    paths:
      - '.github/workflows/cd-k8s.yml'
      - 'k8s/**.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      NAMESPACE: dev

    steps:
      - uses: actions/checkout@v3

      - name: Set version
        id: version
        run: |
          COMMIT=$(git rev-parse --short HEAD)
          VERSION="0.0.0-${GITHUB_REF##*/}-$COMMIT"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push API Image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/my-app-api:$VERSION ./backend
          docker push ${{ steps.login-ecr.outputs.registry }}/my-app-api:$VERSION

      - name: Build and Push Frontend Image
        run: |
          echo "VITE_APP_VERSION=$VERSION" > ./frontend/.env.production.local
          docker build -t ${{ steps.login-ecr.outputs.registry }}/my-app-frontend:$VERSION ./frontend
          docker push ${{ steps.login-ecr.outputs.registry }}/my-app-frontend:$VERSION

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to EKS
        run: |
          sed "s|<ECR_API_IMAGE_TAG>|${{ steps.login-ecr.outputs.registry }}/my-app-api:$VERSION|g" k8s.yaml |
          sed "s|<ECR_FRONTEND_IMAGE_TAG>|${{ steps.login-ecr.outputs.registry }}/my-app-frontend:$VERSION|g" |
          sed "s|<VERSION>|$VERSION|g" |
          kubectl apply -f -
